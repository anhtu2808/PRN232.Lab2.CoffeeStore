code1,endpoint,method,code2,case_name,description,requires_auth,isParam,isPath,json_data
TC001,/auth/register,POST,AUTH_REG_001,Valid user registration,Register a new user with valid credentials - returns 201,none,false,false,"{""username"": ""testuser001"", ""email"": ""test001@example.com"", ""password"": ""password123""}"
TC002,/auth/register,POST,AUTH_REG_002,Duplicate username,Attempt to register with existing username - returns 409,none,false,false,"{""username"": ""testuser001"", ""email"": ""different@example.com"", ""password"": ""password123""}"
TC003,/auth/register,POST,AUTH_REG_003,Invalid password length,Register with password less than 5 characters - returns 400,none,false,false,"{""username"": ""testuser002"", ""email"": ""test002@example.com"", ""password"": ""abc""}"
TC004,/auth/register,POST,AUTH_REG_004,Invalid email format,Register with invalid email format - returns 400,none,false,false,"{""username"": ""testuser003"", ""email"": ""invalidemail"", ""password"": ""password123""}"
TC005,/auth/login,POST,AUTH_LOGIN_001,Valid user login,Login with valid user credentials - returns 200 with token,none,false,false,"{""username"": ""testuser001"", ""password"": ""password123""}"
TC006,/auth/login,POST,AUTH_LOGIN_002,Invalid credentials,Login with wrong password - returns 401,none,false,false,"{""username"": ""testuser001"", ""password"": ""wrongpassword""}"
TC007,/auth/login,POST,AUTH_LOGIN_003,Non-existent user,Login with non-existent username - returns 401,none,false,false,"{""username"": ""nonexistent"", ""password"": ""password123""}"
TC008,/auth/login,POST,AUTH_LOGIN_004,Admin login,Login with admin credentials - returns 200 with admin token,none,false,false,"{""username"": ""admin"", ""password"": ""admin""}"
TC009,/categories,POST,CAT_CREATE_001,Create Coffee category,Create Coffee category - returns 201 (SETUP DATA),admin,false,false,"{""name"": ""Coffee"", ""description"": ""Coffee products""}"
TC010,/categories,POST,CAT_CREATE_002,Create Tea category,Create Tea category - returns 201 (SETUP DATA),admin,false,false,"{""name"": ""Tea"", ""description"": ""Tea products""}"
TC011,/categories,POST,CAT_CREATE_003,Create Pastry category,Create Pastry category - returns 201 (SETUP DATA),admin,false,false,"{""name"": ""Pastry"", ""description"": ""Pastries and baked goods""}"
TC012,/categories,POST,CAT_CREATE_004,Create category without auth,Create category without authorization - returns 401,none,false,false,"{""name"": ""Snacks"", ""description"": ""Snack items""}"
TC013,/categories,POST,CAT_CREATE_005,Create duplicate category,Create category with duplicate name - returns 400/409,admin,false,false,"{ ""description"": ""Another coffee""}"
TC014,/products,POST,PROD_CREATE_001,Create Espresso product,Create Espresso product - returns 201 (SETUP DATA),admin,false,false,"{""name"": ""Espresso"", ""description"": ""Strong coffee"", ""price"": 3.5, ""categoryId"": 1}"
TC015,/products,POST,PROD_CREATE_002,Create Latte product,Create Latte product - returns 201 (SETUP DATA),admin,false,false,"{""name"": ""Latte"", ""description"": ""Milk coffee"", ""price"": 4.5, ""categoryId"": 1}"
TC016,/products,POST,PROD_CREATE_003,Create Cappuccino product,Create Cappuccino product - returns 201 (SETUP DATA),admin,false,false,"{""name"": ""Cappuccino"", ""description"": ""Frothy coffee"", ""price"": 4.0, ""categoryId"": 1}"
TC017,/products,POST,PROD_CREATE_004,Create Green Tea product,Create Green Tea product - returns 201 (SETUP DATA),admin,false,false,"{""name"": ""Green Tea"", ""description"": ""Refreshing tea"", ""price"": 3.0, ""categoryId"": 2}"
TC018,/products,POST,PROD_CREATE_005,Create Croissant product,Create Croissant product - returns 201 (SETUP DATA),admin,false,false,"{""name"": ""Croissant"", ""description"": ""Buttery pastry"", ""price"": 2.5, ""categoryId"": 3}"
TC019,/products,POST,PROD_CREATE_006,Create product without auth,Create product without authorization - returns 401,none,false,false,"{""name"": ""Mocha"", ""description"": ""Chocolate coffee"", ""price"": 5.0, ""categoryId"": 1}"
TC020,/products,POST,PROD_CREATE_007,Create product with invalid category,Create product with non-existent categoryId - returns 400,admin,false,false,"{""name"": ""Mocha"", ""description"": ""Chocolate coffee"", ""price"": 5.0, ""categoryId"": 9999}"
TC021,/products,POST,PROD_CREATE_008,Create product with negative price,Create product with invalid price - returns 400,admin,false,false,"{""name"": ""Invalid Product"", ""description"": ""Bad price"", ""price"": -1.5, ""categoryId"": 1}"
TC022,/categories,GET,CAT_GET_001,Get all categories default,Get categories with default pagination - returns 200,none,false,false,
TC023,/categories,GET,CAT_GET_002,Get categories with paging,Get categories with specific page and pageSize - verify pagination metadata,none,true,false,"{""Page"": ""1"", ""PageSize"": ""2""}"
TC024,/categories,GET,CAT_GET_003,Get categories out of bounds page,Request page beyond available data - returns empty data array,none,true,false,"{""Page"": ""999""}"
TC025,/categories,GET,CAT_GET_004,Get categories with sorting,Get categories sorted by name ascending - verify order,none,true,false,"{""Sort"": ""name"", ""SortDirection"": ""asc""}"
TC026,/categories,GET,CAT_GET_005,Get categories with search,Search categories by keyword - verify filtered results,none,true,false,"{""Keyword"": ""Coffee""}"
TC027,/categories/{{categoryId}},GET,CAT_GETID_001,Get category by valid ID,Get category by existing ID (ID=1) - returns 200 with data,none,false,true,"{""categoryId"": ""1""}"
TC028,/categories/{{categoryId}},GET,CAT_GETID_002,Get category by invalid ID,Get category by non-existent ID - returns 404,none,false,true,"{""categoryId"": ""9999""}"
TC029,/products,GET,PROD_GET_001,Get all products default,Get products with default pagination - returns 200,none,false,false,
TC030,/products,GET,PROD_GET_002,Get products with paging,Get products with pagination - verify page metadata,none,true,false,"{""Page"": ""1"", ""PageSize"": ""3""}"
TC031,/products,GET,PROD_GET_003,Get products by category,Filter products by categoryId - verify all products match category,none,true,false,"{""CategoryId"": ""1""}"
TC032,/products,GET,PROD_GET_004,Get products by price range,Filter products by price range - verify all prices within range,none,true,false,"{""MinPrice"": ""3"", ""MaxPrice"": ""10""}"
TC033,/products,GET,PROD_GET_005,Get active products only,Filter products by active status - verify all are active,none,true,false,"{""IsActive"": ""true""}"
TC034,/products,GET,PROD_GET_006,Get products sorted by price,Get products sorted by price descending - verify order,none,true,false,"{""Sort"": ""price"", ""SortDirection"": ""desc""}"
TC035,/products,GET,PROD_GET_007,Search products by keyword,Search products by name keyword - verify filtered results,none,true,false,"{""Keyword"": ""Espresso""}"
TC036,/products/{{productId}},GET,PROD_GETID_001,Get product by valid ID,Get product by existing ID (ID=1) - returns 200,none,false,true,"{""productId"": ""1""}"
TC037,/products/{{productId}},GET,PROD_GETID_002,Get product by invalid ID,Get product by non-existent ID - returns 404,none,false,true,"{""productId"": ""9999""}"
TC038,/orders,POST,ORD_CREATE_001,Create valid order as user,Create order with valid data and user auth - returns 201,user,false,false,"{""paymentMethod"": ""Cash"", ""orderItems"": [{""productId"": 1, ""quantity"": 2}, {""productId"": 2, ""quantity"": 1}]}"
TC039,/orders,POST,ORD_CREATE_002,Create second order as user,Create another order - returns 201 (SETUP DATA),user,false,false,"{""paymentMethod"": ""Card"", ""orderItems"": [{""productId"": 3, ""quantity"": 1}]}"
TC040,/orders,POST,ORD_CREATE_003,Create order without auth,Create order without authorization - returns 401,none,false,false,"{""paymentMethod"": ""Card"", ""orderItems"": [{""productId"": 1, ""quantity"": 1}]}"
TC041,/orders,POST,ORD_CREATE_004,Create order with empty items,Create order with empty orderItems array - returns 400,user,false,false,"{""paymentMethod"": ""Cash"", ""orderItems"": []}"
TC042,/orders,POST,ORD_CREATE_005,Create order with invalid product,Create order with non-existent productId - returns 400,user,false,false,"{""paymentMethod"": ""Cash"", ""orderItems"": [{""productId"": 9999, ""quantity"": 1}]}"
TC043,/orders,GET,ORD_GET_001,Get user orders with auth,Get own orders with user authorization - returns 200,user,false,false,
TC044,/orders,GET,ORD_GET_002,Get orders without auth,Get orders without authorization - returns 401,none,false,false,
TC045,/orders,GET,ORD_GET_003,Get orders with paging,Get orders with pagination - verify page metadata,user,true,false,"{""Page"": ""1"", ""PageSize"": ""5""}"
TC046,/orders,GET,ORD_GET_004,Get orders by status,Filter orders by status - verify filtered results,user,true,false,"{""Status"": ""1""}"
TC047,/orders,GET,ORD_GET_005,Get orders by date range,Filter orders by date range - verify all dates within range,user,true,false,"{""FromDate"": ""2025-01-01"", ""ToDate"": ""2025-12-31""}"
TC048,/orders,GET,ORD_GET_006,Get orders sorted by date,Get orders sorted by date descending - verify order,user,true,false,"{""Sort"": ""createdDate"", ""SortDirection"": ""desc""}"
TC049,/orders/{{orderId}},GET,ORD_GETID_001,Get own order by valid ID,Get own order by existing ID (use first order ID) with user auth - returns 200,user,false,true,"{""orderId"": ""pm.environment.get(""firstOrderId"")""}"
TC050,/orders/{{orderId}},GET,ORD_GETID_002,Get order without auth,Get order without authorization - returns 401,none,false,true,"{""orderId"": ""pm.environment.get(""firstOrderId"")""}"
TC051,/orders/{{orderId}},GET,ORD_GETID_003,Get order by invalid ID,Get order by non-existent ID - returns 404,user,false,true,"{""orderId"": ""9999""}"
TC052,/auth/refresh,POST,AUTH_REFRESH_001,Valid refresh token,Refresh token with valid refresh token - returns 200,user,false,false,"{""refreshToken"": ""pm.environment.get(""refreshToken"")""}"
TC053,/auth/refresh,POST,AUTH_REFRESH_002,Invalid refresh token,Refresh token with invalid token - returns 401,none,false,false,"{""refreshToken"": ""invalid_token""}"
TC054,/payments/{{orderId}}/create,POST,PAY_CREATE_001,Create payment for valid order,Create payment with valid orderId and user auth - returns 200,user,false,true,"{""orderId"": ""pm.environment.get(""firstOrderId"")""}"
TC055,/payments/{{orderId}}/create,POST,PAY_CREATE_002,Create payment without auth,Create payment without authorization - returns 401,none,false,true,"{""orderId"": ""pm.environment.get(""firstOrderId"")""}"
TC056,/payments/{{orderId}}/create,POST,PAY_CREATE_003,Create payment for invalid order,Create payment with non-existent orderId - returns 404,user,false,true,"{""orderId"": ""9999""}"
TC057,/categories/{{categoryId}},PUT,CAT_UPDATE_001,Update category with admin auth,Update category with valid data and admin auth - returns 200,admin,false,true,"{""categoryId"": ""1"", ""name"": ""Coffee Updated"", ""description"": ""Updated description""}"
TC058,/categories/{{categoryId}},PUT,CAT_UPDATE_002,Update category without auth,Update category without authorization - returns 401,none,false,true,"{""categoryId"": ""1"", ""name"": ""Coffee Updated"", ""description"": ""Updated""}"
TC059,/products/{{productId}},PUT,PROD_UPDATE_001,Update product with admin auth,Update product with valid data and admin auth - returns 200,admin,false,true,"{""productId"": ""1"", ""name"": ""Espresso Updated"", ""description"": ""Updated"", ""price"": 4.0, ""categoryId"": 1, ""isActive"": true}"
TC060,/products/{{productId}},PUT,PROD_UPDATE_002,Update product without auth,Update product without authorization - returns 401,none,false,true,"{""productId"": ""1"", ""name"": ""Espresso"", ""description"": ""Updated"", ""price"": 4.0, ""categoryId"": 1, ""isActive"": true}"
TC061,/orders/{{orderId}},PUT,ORD_UPDATE_001,Update order status as admin,Update order status with admin authorization - returns 200,admin,false,true,"{""orderId"": ""pm.environment.get(""firstOrderId"")"", ""status"": ""Completed""}"
TC062,/orders/{{orderId}},PUT,ORD_UPDATE_002,Update order without auth,Update order without authorization - returns 401,none,false,true,"{""orderId"": ""pm.environment.get(""firstOrderId"")"", ""status"": ""Cancelled""}"
TC063,/users,POST,USER_CREATE_001,Create user as admin,Create user with admin authorization - returns 201,admin,false,false,"{""username"": ""newuser001"", ""email"": ""newuser001@example.com"", ""password"": ""password123""}"
TC064,/users,POST,USER_CREATE_002,Create user without auth,Create user without authorization - returns 401,none,false,false,"{""username"": ""newuser002"", ""email"": ""newuser002@example.com"", ""password"": ""password123""}"
TC065,/users,GET,USER_GET_001,Get all users as admin,Get users with admin authorization - returns 200,admin,false,false,
TC066,/users,GET,USER_GET_002,Get users without auth,Get users without authorization - returns 401,none,false,false,
TC067,/users,GET,USER_GET_003,Get users with paging,Get users with pagination - verify page metadata,admin,true,false,"{""Page"": ""1"", ""PageSize"": ""10""}"
TC068,/users,GET,USER_GET_004,Get users by username filter,Filter users by username - verify filtered results,admin,true,false,"{""Username"": ""testuser""}"
TC069,/users,GET,USER_GET_005,Get users by email filter,Filter users by email - verify filtered results,admin,true,false,"{""Email"": ""test@example.com""}"
TC070,/users/{{userId}},GET,USER_GETID_001,Get user by valid ID as admin,Get user by existing ID with admin auth - returns 200,admin,false,true,"{""userId"": ""pm.environment.get(""testUserId"")""}"
TC071,/users/{{userId}},GET,USER_GETID_002,Get user without auth,Get user without authorization - returns 401,none,false,true,"{""userId"": ""pm.environment.get(""testUserId"")""}"
TC072,/users/{{userId}},PUT,USER_UPDATE_001,Update user as admin,Update user with admin authorization - returns 200,admin,false,true,"{""userId"": ""pm.environment.get(""testUserId"")"", ""username"": ""updateduser"", ""email"": ""updated@example.com"", ""password"": ""newpassword123""}"
TC073,/users/{{userId}},PUT,USER_UPDATE_002,Update user without auth,Update user without authorization - returns 401,none,false,true,"{""userId"": ""pm.environment.get(""testUserId"")"", ""username"": ""updateduser"", ""email"": ""updated@example.com"", ""password"": ""newpassword123""}"
TC074,/orders/{{orderId}},DELETE,ORD_DELETE_001,Delete order without auth,Delete order without authorization - returns 401,none,false,true,"{""orderId"": ""pm.environment.get(""firstOrderId"")""}"
TC075,/orders/{{orderId}},DELETE,ORD_DELETE_002,Delete non-existent order as admin,Delete order with invalid ID - returns 404,admin,false,true,"{""orderId"": ""9999""}"
TC076,/products/{{productId}},DELETE,PROD_DELETE_001,Delete product without auth,Delete product without authorization - returns 401,none,false,true,"{""productId"": ""5""}"
TC077,/products/{{productId}},DELETE,PROD_DELETE_002,Delete non-existent product,Delete product with invalid ID - returns 404,admin,false,true,"{""productId"": ""9999""}"
TC078,/categories/{{categoryId}},DELETE,CAT_DELETE_001,Delete category without auth,Delete category without authorization - returns 401,none,false,true,"{""categoryId"": ""3""}"
TC079,/categories/{{categoryId}},DELETE,CAT_DELETE_002,Delete non-existent category,Delete category with invalid ID - returns 404,admin,false,true,"{""categoryId"": ""9999""}"
TC080,/users/{{userId}},DELETE,USER_DELETE_001,Delete user without auth,Delete user without authorization - returns 401,none,false,true,"{""userId"": ""pm.environment.get(""testUserId"")""}"
TC081,/users/{{userId}},DELETE,USER_DELETE_002,Delete non-existent user,Delete user with invalid ID - returns 404,admin,false,true,"{""userId"": ""00000000-0000-0000-0000-000000000000""}"
